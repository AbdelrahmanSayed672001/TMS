!function (e, t) { void 0 === e && void 0 !== window && (e = window), "function" == typeof define && define.amd ? define(["jquery"], function (e) { return t(e) }) : "object" == typeof module && module.exports ? module.exports = t(require("jquery")) : t(e.jQuery) }(this, function (e) { !function (e) { "use strict"; var t = ["sanitize", "whiteList", "sanitizeFn"], i = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"], s = { "*": ["class", "dir", "id", "lang", "role", "tabindex", "style", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, n = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))/gi, o = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i; function r(t, s) { var r = t.nodeName.toLowerCase(); if (-1 !== e.inArray(r, s)) return -1 === e.inArray(r, i) || Boolean(t.nodeValue.match(n) || t.nodeValue.match(o)); for (var l = e(s).filter(function (e, t) { return t instanceof RegExp }), c = 0, a = l.length; c < a; c++)if (r.match(l[c])) return !0; return !1 } function l(e, t, i) { if (i && "function" == typeof i) return i(e); for (var s = Object.keys(t), n = 0, o = e.length; n < o; n++)for (var l = e[n].querySelectorAll("*"), c = 0, a = l.length; c < a; c++) { var d = l[c], h = d.nodeName.toLowerCase(); if (-1 !== s.indexOf(h)) for (var p = [].slice.call(d.attributes), u = [].concat(t["*"] || [], t[h] || []), f = 0, m = p.length; f < m; f++) { var v = p[f]; r(v, u) || d.removeAttribute(v.nodeName) } else d.parentNode.removeChild(d) } } "classList" in document.createElement("_") || function (t) { if ("Element" in t) { var i = t.Element.prototype, s = Object, n = function () { var t = e(this); return { add: function (e) { return t.addClass(e) }, remove: function (e) { return t.removeClass(e) }, toggle: function (e, i) { return t.toggleClass(e, i) }, contains: function (e) { return t.hasClass(e) } } }; if (s.defineProperty) { var o = { get: n, enumerable: !0, configurable: !0 }; try { s.defineProperty(i, "classList", o) } catch (e) { void 0 !== e.number && -2146823252 !== e.number || (o.enumerable = !1, s.defineProperty(i, "classList", o)) } } else s.prototype.__defineGetter__ && i.__defineGetter__("classList", n) } }(window); var c, a, d, h = document.createElement("_"); if (h.classList.toggle("c3", !1), h.classList.contains("c3")) { var p = DOMTokenList.prototype.toggle; DOMTokenList.prototype.toggle = function (e, t) { return 1 in arguments && !this.contains(e) == !t ? t : p.call(this, e) } } function u(e) { var t, i = [], s = e.selectedOptions; if (e.multiple) for (var n = 0, o = s.length; n < o; n++)t = s[n], i.push(t.value || t.text); else i = e.value; return i } h = null, String.prototype.startsWith || (c = function () { try { var e = {}, t = Object.defineProperty, i = t(e, e, e) && t } catch (e) { } return i }(), a = {}.toString, d = function (e) { if (null == this) throw new TypeError; var t = String(this); if (e && "[object RegExp]" == a.call(e)) throw new TypeError; var i = t.length, s = String(e), n = s.length, o = arguments.length > 1 ? arguments[1] : void 0, r = o ? Number(o) : 0; r != r && (r = 0); var l = Math.min(Math.max(r, 0), i); if (n + l > i) return !1; for (var c = -1; ++c < n;)if (t.charCodeAt(l + c) != s.charCodeAt(c)) return !1; return !0 }, c ? c(String.prototype, "startsWith", { value: d, configurable: !0, writable: !0 }) : String.prototype.startsWith = d), Object.keys || (Object.keys = function (e, t, i) { for (t in i = [], e) i.hasOwnProperty.call(e, t) && i.push(t); return i }), HTMLSelectElement.prototype.hasOwnProperty("selectedOptions") || Object.defineProperty(HTMLSelectElement.prototype, "selectedOptions", { get: function () { return this.querySelectorAll(":checked") } }); var f = { useDefault: !1, _set: e.valHooks.select.set }; e.valHooks.select.set = function (t, i) { return i && !f.useDefault && e(t).data("selected", !0), f._set.apply(this, arguments) }; var m = null, v = function () { try { return new Event("change"), !0 } catch (e) { return !1 } }(); function g(e, t, i, s) { for (var n = ["content", "subtext", "tokens"], o = !1, r = 0; r < n.length; r++) { var l = n[r], c = e[l]; if (c && (c = c.toString(), "content" === l && (c = c.replace(/<[^>]+>/g, "")), s && (c = $(c)), c = c.toUpperCase(), o = "contains" === i ? c.indexOf(t) >= 0 : c.startsWith(t))) break } return o } function b(e) { return parseInt(e, 10) || 0 } e.fn.triggerNative = function (e) { var t, i = this[0]; i.dispatchEvent ? (v ? t = new Event(e, { bubbles: !0 }) : (t = document.createEvent("Event")).initEvent(e, !0, !1), i.dispatchEvent(t)) : i.fireEvent ? ((t = document.createEventObject()).eventType = e, i.fireEvent("on" + e, t)) : this.trigger(e) }; var w = { "À": "A", "Á": "A", "Â": "A", "Ã": "A", "Ä": "A", "Å": "A", "à": "a", "á": "a", "â": "a", "ã": "a", "ä": "a", "å": "a", "Ç": "C", "ç": "c", "Ð": "D", "ð": "d", "È": "E", "É": "E", "Ê": "E", "Ë": "E", "è": "e", "é": "e", "ê": "e", "ë": "e", "Ì": "I", "Í": "I", "Î": "I", "Ï": "I", "ì": "i", "í": "i", "î": "i", "ï": "i", "Ñ": "N", "ñ": "n", "Ò": "O", "Ó": "O", "Ô": "O", "Õ": "O", "Ö": "O", "Ø": "O", "ò": "o", "ó": "o", "ô": "o", "õ": "o", "ö": "o", "ø": "o", "Ù": "U", "Ú": "U", "Û": "U", "Ü": "U", "ù": "u", "ú": "u", "û": "u", "ü": "u", "Ý": "Y", "ý": "y", "ÿ": "y", "Æ": "Ae", "æ": "ae", "Þ": "Th", "þ": "th", "ß": "ss", "Ā": "A", "Ă": "A", "Ą": "A", "ā": "a", "ă": "a", "ą": "a", "Ć": "C", "Ĉ": "C", "Ċ": "C", "Č": "C", "ć": "c", "ĉ": "c", "ċ": "c", "č": "c", "Ď": "D", "Đ": "D", "ď": "d", "đ": "d", "Ē": "E", "Ĕ": "E", "Ė": "E", "Ę": "E", "Ě": "E", "ē": "e", "ĕ": "e", "ė": "e", "ę": "e", "ě": "e", "Ĝ": "G", "Ğ": "G", "Ġ": "G", "Ģ": "G", "ĝ": "g", "ğ": "g", "ġ": "g", "ģ": "g", "Ĥ": "H", "Ħ": "H", "ĥ": "h", "ħ": "h", "Ĩ": "I", "Ī": "I", "Ĭ": "I", "Į": "I", "İ": "I", "ĩ": "i", "ī": "i", "ĭ": "i", "į": "i", "ı": "i", "Ĵ": "J", "ĵ": "j", "Ķ": "K", "ķ": "k", "ĸ": "k", "Ĺ": "L", "Ļ": "L", "Ľ": "L", "Ŀ": "L", "Ł": "L", "ĺ": "l", "ļ": "l", "ľ": "l", "ŀ": "l", "ł": "l", "Ń": "N", "Ņ": "N", "Ň": "N", "Ŋ": "N", "ń": "n", "ņ": "n", "ň": "n", "ŋ": "n", "Ō": "O", "Ŏ": "O", "Ő": "O", "ō": "o", "ŏ": "o", "ő": "o", "Ŕ": "R", "Ŗ": "R", "Ř": "R", "ŕ": "r", "ŗ": "r", "ř": "r", "Ś": "S", "Ŝ": "S", "Ş": "S", "Š": "S", "ś": "s", "ŝ": "s", "ş": "s", "š": "s", "Ţ": "T", "Ť": "T", "Ŧ": "T", "ţ": "t", "ť": "t", "ŧ": "t", "Ũ": "U", "Ū": "U", "Ŭ": "U", "Ů": "U", "Ű": "U", "Ų": "U", "ũ": "u", "ū": "u", "ŭ": "u", "ů": "u", "ű": "u", "ų": "u", "Ŵ": "W", "ŵ": "w", "Ŷ": "Y", "ŷ": "y", "Ÿ": "Y", "Ź": "Z", "Ż": "Z", "Ž": "Z", "ź": "z", "ż": "z", "ž": "z", "Ĳ": "IJ", "ĳ": "ij", "Œ": "Oe", "œ": "oe", "ŉ": "'n", "ſ": "s" }, x = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, I = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\u1ab0-\\u1aff\\u1dc0-\\u1dff]", "g"); function k(e) { return w[e] } function $(e) { return (e = e.toString()) && e.replace(x, k).replace(I, "") } var S, y, E, C, O, z = (S = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;" }, y = function (e) { return S[e] }, E = "(?:" + Object.keys(S).join("|") + ")", C = RegExp(E), O = RegExp(E, "g"), function (e) { return e = null == e ? "" : "" + e, C.test(e) ? e.replace(O, y) : e }), T = { 32: " ", 48: "0", 49: "1", 50: "2", 51: "3", 52: "4", 53: "5", 54: "6", 55: "7", 56: "8", 57: "9", 59: ";", 65: "A", 66: "B", 67: "C", 68: "D", 69: "E", 70: "F", 71: "G", 72: "H", 73: "I", 74: "J", 75: "K", 76: "L", 77: "M", 78: "N", 79: "O", 80: "P", 81: "Q", 82: "R", 83: "S", 84: "T", 85: "U", 86: "V", 87: "W", 88: "X", 89: "Y", 90: "Z", 96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", 103: "7", 104: "8", 105: "9" }, L = 27, A = 13, H = 32, D = 9, N = 38, P = 40, B = { success: !1, major: "3" }; try { B.full = (e.fn.dropdown.Constructor.VERSION || "").split(" ")[0].split("."), B.major = B.full[0], B.success = !0 } catch (e) { console.warn("There was an issue retrieving Bootstrap's version. Ensure Bootstrap is being loaded before bootstrap-select and there is no namespace collision. If loading Bootstrap asynchronously, the version may need to be manually specified via $.fn.selectpicker.Constructor.BootstrapVersion.", e) } var R = 0, W = ".bs.select", M = { DISABLED: "disabled", DIVIDER: "divider", SHOW: "open", DROPUP: "dropup", MENU: "dropdown-menu", MENURIGHT: "dropdown-menu-right", MENULEFT: "dropdown-menu-left", BUTTONCLASS: "btn-default", POPOVERHEADER: "popover-title" }, U = { MENU: "." + M.MENU }; "4" === B.major && (M.DIVIDER = "dropdown-divider", M.SHOW = "show", M.BUTTONCLASS = "btn-light", M.BUTTONCLASS = "form-control", M.POPOVERHEADER = "popover-header"); var V = { span: document.createElement("span"), i: document.createElement("i"), subtext: document.createElement("small"), a: document.createElement("a"), li: document.createElement("li"), whitespace: document.createTextNode(" "), fragment: document.createDocumentFragment() }; V.a.setAttribute("role", "option"), V.subtext.className = "text-muted", V.text = V.span.cloneNode(!1), V.text.className = "text"; var j = new RegExp(N + "|" + P), F = new RegExp("^" + D + "$|" + L), _ = function (e, t, i) { var s = V.li.cloneNode(!1); return e && (1 === e.nodeType || 11 === e.nodeType ? s.appendChild(e) : s.innerHTML = e), void 0 !== t && "" !== t && (s.className = t), null != i && s.classList.add("optgroup-" + i), s }, G = function (e, t, i) { var s = V.a.cloneNode(!0); return e && (11 === e.nodeType ? s.appendChild(e) : s.insertAdjacentHTML("beforeend", e)), void 0 !== t && "" !== t && (s.className = t), "4" === B.major && s.classList.add("dropdown-item"), i && s.setAttribute("style", i), s }, q = function (e, t) { var i, s, n = V.text.cloneNode(!1); if (e.optionContent) n.innerHTML = e.optionContent; else { if (n.textContent = e.text, e.optionIcon) { var o = V.whitespace.cloneNode(!1); (s = (!0 === t ? V.i : V.span).cloneNode(!1)).className = e.iconBase + " " + e.optionIcon, V.fragment.appendChild(s), V.fragment.appendChild(o) } e.optionSubtext && ((i = V.subtext.cloneNode(!1)).textContent = e.optionSubtext, n.appendChild(i)) } if (!0 === t) for (; n.childNodes.length > 0;)V.fragment.appendChild(n.childNodes[0]); else V.fragment.appendChild(n); return V.fragment }, K = function (e) { var t, i, s = V.text.cloneNode(!1); if (s.innerHTML = e.labelEscaped, e.labelIcon) { var n = V.whitespace.cloneNode(!1); (i = V.span.cloneNode(!1)).className = e.iconBase + " " + e.labelIcon, V.fragment.appendChild(i), V.fragment.appendChild(n) } return e.labelSubtext && ((t = V.subtext.cloneNode(!1)).textContent = e.labelSubtext, s.appendChild(t)), V.fragment.appendChild(s), V.fragment }, Y = function (t, i) { var s = this; f.useDefault || (e.valHooks.select.set = f._set, f.useDefault = !0), this.$element = e(t), this.$newElement = null, this.$button = null, this.$menu = null, this.options = i, this.selectpicker = { main: { map: { newIndex: {}, originalIndex: {} } }, current: { map: {} }, search: { map: {} }, view: {}, keydown: { keyHistory: "", resetKeyHistory: { start: function () { return setTimeout(function () { s.selectpicker.keydown.keyHistory = "" }, 800) } } } }, null === this.options.title && (this.options.title = this.$element.attr("title")); var n = this.options.windowPadding; "number" == typeof n && (this.options.windowPadding = [n, n, n, n]), this.val = Y.prototype.val, this.render = Y.prototype.render, this.refresh = Y.prototype.refresh, this.setStyle = Y.prototype.setStyle, this.selectAll = Y.prototype.selectAll, this.deselectAll = Y.prototype.deselectAll, this.destroy = Y.prototype.destroy, this.remove = Y.prototype.remove, this.show = Y.prototype.show, this.hide = Y.prototype.hide, this.init() }; function Z(i) { var s, n = arguments, o = i; if ([].shift.apply(n), !B.success) { try { B.full = (e.fn.dropdown.Constructor.VERSION || "").split(" ")[0].split(".") } catch (e) { B.full = Y.BootstrapVersion.split(" ")[0].split(".") } B.major = B.full[0], B.success = !0, "4" === B.major && (M.DIVIDER = "dropdown-divider", M.SHOW = "show", M.BUTTONCLASS = "btn-light", M.BUTTONCLASS = "form-control", Y.DEFAULTS.style = M.BUTTONCLASS = "btn-light", Y.DEFAULTS.style = M.BUTTONCLASS = "form-control", M.POPOVERHEADER = "popover-header") } var r = this.each(function () { var i = e(this); if (i.is("select")) { var r = i.data("selectpicker"), l = "object" == typeof o && o; if (r) { if (l) for (var c in l) l.hasOwnProperty(c) && (r.options[c] = l[c]) } else { var a = i.data(); for (var d in a) a.hasOwnProperty(d) && -1 !== e.inArray(d, t) && delete a[d]; var h = e.extend({}, Y.DEFAULTS, e.fn.selectpicker.defaults || {}, a, l); h.template = e.extend({}, Y.DEFAULTS.template, e.fn.selectpicker.defaults ? e.fn.selectpicker.defaults.template : {}, a.template, l.template), i.data("selectpicker", r = new Y(this, h)) } "string" == typeof o && (s = r[o] instanceof Function ? r[o].apply(r, n) : r.options[o]) } }); return void 0 !== s ? s : r } Y.VERSION = "1.13.6", Y.BootstrapVersion = B.major, Y.DEFAULTS = { noneSelectedText: "Nothing selected", noneResultsText: "No results matched {0}", countSelectedText: function (e, t) { return 1 == e ? "{0} item selected" : "{0} items selected" }, maxOptionsText: function (e, t) { return [1 == e ? "Limit reached ({n} item max)" : "Limit reached ({n} items max)", 1 == t ? "Group limit reached ({n} item max)" : "Group limit reached ({n} items max)"] }, selectAllText: "Select All", deselectAllText: "Deselect All", doneButton: !1, doneButtonText: "Close", multipleSeparator: ", ", styleBase: "btn", style: M.BUTTONCLASS, size: "auto", title: null, selectedTextFormat: "values", width: !1, container: !1, hideDisabled: !1, showSubtext: !1, showIcon: !0, showContent: !0, dropupAuto: !0, header: !1, liveSearch: !1, liveSearchPlaceholder: null, liveSearchNormalize: !1, liveSearchStyle: "contains", actionsBox: !1, iconBase: "glyphicon", tickIcon: "glyphicon-ok", showTick: !1, template: { caret: '<span class="caret"></span>' }, maxOptions: !1, mobile: !1, selectOnTab: !1, dropdownAlignRight: !1, windowPadding: 0, virtualScroll: 600, display: !1, sanitize: !0, sanitizeFn: null, whiteList: s }, "4" === B.major && (Y.DEFAULTS.style = "btn-light", Y.DEFAULTS.style = "form-control", Y.DEFAULTS.iconBase = "", Y.DEFAULTS.tickIcon = "bs-ok-default"), Y.prototype = { constructor: Y, init: function () { var e = this, t = this.$element.attr("id"); this.selectId = R++ , this.$element[0].classList.add("bs-select-hidden"), this.multiple = this.$element.prop("multiple"), this.autofocus = this.$element.prop("autofocus"), this.$newElement = this.createDropdown(), this.$element.after(this.$newElement).prependTo(this.$newElement), this.$button = this.$newElement.children("button"), this.$menu = this.$newElement.children(U.MENU), this.$menuInner = this.$menu.children(".inner"), this.$searchbox = this.$menu.find("input"), this.$element[0].classList.remove("bs-select-hidden"), !0 === this.options.dropdownAlignRight && this.$menu[0].classList.add(M.MENURIGHT), void 0 !== t && this.$button.attr("data-id", t), this.checkDisabled(), this.clickListener(), this.options.liveSearch && this.liveSearchListener(), this.render(), this.setStyle(), this.setWidth(), this.options.container ? this.selectPosition() : this.$element.on("hide.bs.select", function () { if (e.isVirtual()) { var t = e.$menuInner[0], i = t.firstChild.cloneNode(!1); t.replaceChild(i, t.firstChild), t.scrollTop = 0 } }), this.$menu.data("this", this), this.$newElement.data("this", this), this.options.mobile && this.mobile(), this.$newElement.on({ "hide.bs.dropdown": function (t) { e.$menuInner.attr("aria-expanded", !1), e.$element.trigger("hide.bs.select", t) }, "hidden.bs.dropdown": function (t) { e.$element.trigger("hidden.bs.select", t) }, "show.bs.dropdown": function (t) { e.$menuInner.attr("aria-expanded", !0), e.$element.trigger("show.bs.select", t) }, "shown.bs.dropdown": function (t) { e.$element.trigger("shown.bs.select", t) } }), e.$element[0].hasAttribute("required") && this.$element.on("invalid", function () { e.$button[0].classList.add("bs-invalid"), e.$element.on("shown.bs.select.invalid", function () { e.$element.val(e.$element.val()).off("shown.bs.select.invalid") }).on("rendered.bs.select", function () { this.validity.valid && e.$button[0].classList.remove("bs-invalid"), e.$element.off("rendered.bs.select") }), e.$button.on("blur.bs.select", function () { e.$element.trigger("focus").trigger("blur"), e.$button.off("blur.bs.select") }) }), setTimeout(function () { e.createLi(), e.$element.trigger("loaded.bs.select") }) }, createDropdown: function () { var t, i = this.multiple || this.options.showTick ? " show-tick" : "", s = this.autofocus ? " autofocus" : "", n = "", o = "", r = "", l = ""; return this.options.header && (n = '<div class="' + M.POPOVERHEADER + '"><button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + "</div>"), this.options.liveSearch && (o = '<div class="bs-searchbox"><input type="text" class="form-control" autocomplete="off"' + (null === this.options.liveSearchPlaceholder ? "" : ' placeholder="' + z(this.options.liveSearchPlaceholder) + '"') + ' role="textbox" aria-label="Search"></div>'), this.multiple && this.options.actionsBox && (r = '<div class="bs-actionsbox"><div class="btn-group btn-group-sm btn-block"><button type="button" class="actions-btn bs-select-all btn ' + M.BUTTONCLASS + '">' + this.options.selectAllText + '</button><button type="button" class="actions-btn bs-deselect-all btn ' + M.BUTTONCLASS + '">' + this.options.deselectAllText + "</button></div></div>"), this.multiple && this.options.doneButton && (l = '<div class="bs-donebutton"><div class="btn-group btn-block"><button type="button" class="btn btn-sm ' + M.BUTTONCLASS + '">' + this.options.doneButtonText + "</button></div></div>"), t = '<div class="dropdown bootstrap-select' + i + '"><button type="button" class="' + this.options.styleBase + ' dropdown-toggle" ' + ("static" === this.options.display ? 'data-display="static"' : "") + 'data-toggle="dropdown"' + s + ' role="button"><div class="filter-option"><div class="filter-option-inner"><div class="filter-option-inner-inner"></div></div> </div>' + ("4" === B.major ? "" : '<span class="bs-caret">' + this.options.template.caret + "</span>") + '</button><div class="' + M.MENU + " " + ("4" === B.major ? "" : M.SHOW) + '" role="combobox">' + n + o + r + '<div class="inner ' + M.SHOW + '" role="listbox" aria-expanded="false" tabindex="-1"><ul class="' + M.MENU + " inner " + ("4" === B.major ? M.SHOW : "") + '"></ul></div>' + l + "</div></div>", e(t) }, setPositionData: function () { this.selectpicker.view.canHighlight = []; for (var e = 0; e < this.selectpicker.current.data.length; e++) { var t = this.selectpicker.current.data[e], i = !0; "divider" === t.type ? (i = !1, t.height = this.sizeInfo.dividerHeight) : "optgroup-label" === t.type ? (i = !1, t.height = this.sizeInfo.dropdownHeaderHeight) : t.height = this.sizeInfo.liHeight, t.disabled && (i = !1), this.selectpicker.view.canHighlight.push(i), t.position = (0 === e ? 0 : this.selectpicker.current.data[e - 1].position) + t.height } }, isVirtual: function () { return !1 !== this.options.virtualScroll && this.selectpicker.main.elements.length >= this.options.virtualScroll || !0 === this.options.virtualScroll }, createView: function (t, i) { i = i || 0; var s = this; this.selectpicker.current = t ? this.selectpicker.search : this.selectpicker.main; var n, o, r = []; function c(e, i) { var c, a, d, h, p, u, f, m, v, g, b = s.selectpicker.current.elements.length, w = [], x = !0, I = s.isVirtual(); s.selectpicker.view.scrollTop = e, !0 === I && s.sizeInfo.hasScrollBar && s.$menu[0].offsetWidth > s.sizeInfo.totalMenuWidth && (s.sizeInfo.menuWidth = s.$menu[0].offsetWidth, s.sizeInfo.totalMenuWidth = s.sizeInfo.menuWidth + s.sizeInfo.scrollBarWidth, s.$menu.css("min-width", s.sizeInfo.menuWidth)), c = Math.ceil(s.sizeInfo.menuInnerHeight / s.sizeInfo.liHeight * 1.5), a = Math.round(b / c) || 1; for (var k = 0; k < a; k++) { var $ = (k + 1) * c; if (k === a - 1 && ($ = b), w[k] = [k * c + (k ? 1 : 0), $], !b) break; void 0 === p && e <= s.selectpicker.current.data[$ - 1].position - s.sizeInfo.menuInnerHeight && (p = k) } if (void 0 === p && (p = 0), u = [s.selectpicker.view.position0, s.selectpicker.view.position1], d = Math.max(0, p - 1), h = Math.min(a - 1, p + 1), s.selectpicker.view.position0 = Math.max(0, w[d][0]) || 0, s.selectpicker.view.position1 = Math.min(b, w[h][1]) || 0, f = u[0] !== s.selectpicker.view.position0 || u[1] !== s.selectpicker.view.position1, void 0 !== s.activeIndex && (o = s.selectpicker.current.elements[s.selectpicker.current.map.newIndex[s.prevActiveIndex]], r = s.selectpicker.current.elements[s.selectpicker.current.map.newIndex[s.activeIndex]], n = s.selectpicker.current.elements[s.selectpicker.current.map.newIndex[s.selectedIndex]], i && (s.activeIndex !== s.selectedIndex && r && r.length && (r.classList.remove("active"), r.firstChild && r.firstChild.classList.remove("active")), s.activeIndex = void 0), s.activeIndex && s.activeIndex !== s.selectedIndex && n && n.length && (n.classList.remove("active"), n.firstChild && n.firstChild.classList.remove("active"))), void 0 !== s.prevActiveIndex && s.prevActiveIndex !== s.activeIndex && s.prevActiveIndex !== s.selectedIndex && o && o.length && (o.classList.remove("active"), o.firstChild && o.firstChild.classList.remove("active")), (i || f) && (m = s.selectpicker.view.visibleElements ? s.selectpicker.view.visibleElements.slice() : [], s.selectpicker.view.visibleElements = s.selectpicker.current.elements.slice(s.selectpicker.view.position0, s.selectpicker.view.position1), s.setOptionStatus(), (t || !1 === I && i) && (v = m, g = s.selectpicker.view.visibleElements, x = !(v.length === g.length && v.every(function (e, t) { return e === g[t] }))), (i || !0 === I) && x)) { var S, y, E = s.$menuInner[0], C = document.createDocumentFragment(), O = E.firstChild.cloneNode(!1), z = !0 === I ? s.selectpicker.view.visibleElements : s.selectpicker.current.elements, T = []; E.replaceChild(O, E.firstChild); k = 0; for (var L = z.length; k < L; k++) { var A, H, D = z[k]; s.options.sanitize && (A = D.lastChild) && (H = s.selectpicker.current.data[k + s.selectpicker.view.position0].data) && H.content && !H.sanitized && (T.push(A), H.sanitized = !0), C.appendChild(D) } s.options.sanitize && T.length && l(T, s.options.whiteList, s.options.sanitizeFn), !0 === I && (S = 0 === s.selectpicker.view.position0 ? 0 : s.selectpicker.current.data[s.selectpicker.view.position0 - 1].position, y = s.selectpicker.view.position1 > b - 1 ? 0 : s.selectpicker.current.data[b - 1].position - s.selectpicker.current.data[s.selectpicker.view.position1 - 1].position, E.firstChild.style.marginTop = S + "px", E.firstChild.style.marginBottom = y + "px"), E.firstChild.appendChild(C) } if (s.prevActiveIndex = s.activeIndex, s.options.liveSearch) { if (t && i) { var N, P = 0; s.selectpicker.view.canHighlight[P] || (P = 1 + s.selectpicker.view.canHighlight.slice(1).indexOf(!0)), N = s.selectpicker.view.visibleElements[P], s.selectpicker.view.currentActive && (s.selectpicker.view.currentActive.classList.remove("active"), s.selectpicker.view.currentActive.firstChild && s.selectpicker.view.currentActive.firstChild.classList.remove("active")), N && (N.classList.add("active"), N.firstChild && N.firstChild.classList.add("active")), s.activeIndex = s.selectpicker.current.map.originalIndex[P] } } else s.$menuInner.trigger("focus") } this.setPositionData(), c(i, !0), this.$menuInner.off("scroll.createView").on("scroll.createView", function (e, t) { s.noScroll || c(this.scrollTop, t), s.noScroll = !1 }), e(window).off("resize.bs.select." + this.selectId + ".createView").on("resize.bs.select." + this.selectId + ".createView", function () { s.$newElement.hasClass(M.SHOW) && c(s.$menuInner[0].scrollTop) }) }, setPlaceholder: function () { var t = !1; if (this.options.title && !this.multiple) { this.selectpicker.view.titleOption || (this.selectpicker.view.titleOption = document.createElement("option")), t = !0; var i = this.$element[0], s = !1, n = !this.selectpicker.view.titleOption.parentNode; if (n) this.selectpicker.view.titleOption.className = "bs-title-option", this.selectpicker.view.titleOption.value = "", s = void 0 === e(i.options[i.selectedIndex]).attr("selected") && void 0 === this.$element.data("selected"); (n || 0 !== this.selectpicker.view.titleOption.index) && i.insertBefore(this.selectpicker.view.titleOption, i.firstChild), s && (i.selectedIndex = 0) } return t }, createLi: function () { var e, t, i = this.options.iconBase, s = ':not([hidden]):not([data-hidden="true"])', n = [], o = 0, r = [], l = 0, c = 0, a = -1; this.options.hideDisabled && (s += ":not(:disabled)"), (this.options.showTick || this.multiple) && ((e = V.span.cloneNode(!1)).className = i + " " + this.options.tickIcon + " check-mark", V.a.appendChild(e)), this.setPlaceholder() && a--; for (var d = this.$element[0].options, h = 0, p = d.length; h < p; h++) { var u = d[h]; if (a++ , !u.classList.contains("bs-title-option")) { var f, m, v, g, b = { content: u.getAttribute("data-content"), tokens: u.getAttribute("data-tokens"), subtext: u.getAttribute("data-subtext"), icon: u.getAttribute("data-icon"), hidden: "true" === u.getAttribute("data-hidden"), divider: "true" === u.getAttribute("data-divider") }, w = u.className || "", x = u.style.cssText, I = x ? z(x) : "", k = b.content, $ = u.textContent, S = u.parentNode, y = u.nextElementSibling, E = u.previousElementSibling, C = "OPTGROUP" === S.tagName, O = C && S.disabled, T = u.disabled || O, L = E && "OPTGROUP" === E.tagName, A = { hidden: "true" === S.getAttribute("data-hidden") }; if (!0 === b.hidden || u.hidden || C && (!0 === A.hidden || S.hidden) || this.options.hideDisabled && (T || O)) f = u.prevHiddenIndex, y && (y.prevHiddenIndex = void 0 !== f ? f : h), a--; else { if (y && void 0 !== y.prevHiddenIndex && (y.prevHiddenIndex = void 0), C && !0 !== b.divider) { var H = " " + S.className || "", D = u.previousElementSibling; if (void 0 !== (f = u.prevHiddenIndex) && (D = d[f].previousElementSibling), !D) { l += 1, A.subtext = S.getAttribute("data-subtext"), A.icon = S.getAttribute("data-icon"); var N = S.label, P = z(N), B = A.subtext, R = A.icon; 0 !== h && n.length > 0 && (a++ , n.push(_(!1, M.DIVIDER, l + "div")), r.push({ type: "divider", optID: l })), a++ , v = K({ labelEscaped: P, labelSubtext: B, labelIcon: R, iconBase: i }), n.push(_(v, "dropdown-header" + H, l)), r.push({ content: P, subtext: B, type: "optgroup-label", optID: l }), c = a - 1 } m = q({ text: $, optionContent: k, optionSubtext: b.subtext, optionIcon: b.icon, iconBase: i }), n.push(_(G(m, "opt " + w + H, I), "", l)), r.push({ content: k || $, subtext: b.subtext, tokens: b.tokens, type: "option", optID: l, headerIndex: c, lastIndex: c + S.querySelectorAll("option" + s).length, originalIndex: h, data: b }) } else if (!0 === b.divider) n.push(_(!1, M.DIVIDER)), r.push({ type: "divider", originalIndex: h, data: b }); else { if (this.options.hideDisabled) if (L) E.querySelectorAll("option:disabled").length === E.children.length && (L = !1); else if (void 0 !== (f = u.prevHiddenIndex)) if ((g = d[f].previousElementSibling) && "OPTGROUP" === g.tagName && !g.disabled) g.querySelectorAll("option:disabled").length < g.children.length && (L = !0); L && r.length && "divider" !== r[r.length - 1].type && (a++ , n.push(_(!1, M.DIVIDER, l + "div")), r.push({ type: "divider", optID: l })), m = q({ text: $, optionContent: k, optionSubtext: b.subtext, optionIcon: b.icon, iconBase: i }), n.push(_(G(m, w, I))), r.push({ content: k || $, subtext: b.subtext, tokens: b.tokens, type: "option", originalIndex: h, data: b }) } this.selectpicker.main.map.newIndex[h] = a, this.selectpicker.main.map.originalIndex[a] = h; var W = r[r.length - 1]; W.disabled = T; var U = 0; W.content && (U += W.content.length), W.subtext && (U += W.subtext.length), b.icon && (U += 1), U > o && (o = U, t = n[n.length - 1]) } } } this.selectpicker.main.elements = n, this.selectpicker.main.data = r, this.selectpicker.current = this.selectpicker.main, this.selectpicker.view.widestOption = t }, findLis: function () { return this.$menuInner.find(".inner > li") }, render: function () { this.setPlaceholder(); var e, t, i = this.$element[0].selectedOptions, s = i.length, n = this.$button.find(".filter-option-inner-inner")[0], o = document.createTextNode(this.options.multipleSeparator), r = V.fragment.cloneNode(!1), c = !1; if (this.togglePlaceholder(), this.tabIndex(), "static" === this.options.selectedTextFormat) r = q({ text: this.options.title }, !0); else if ((e = this.multiple && -1 !== this.options.selectedTextFormat.indexOf("count") && s > 1) && (e = (t = this.options.selectedTextFormat.split(">")).length > 1 && s > t[1] || 1 === t.length && s >= 2), !1 === e) { for (var a = 0; a < s && a < 50; a++) { var d = i[a], h = {}, p = { content: d.getAttribute("data-content"), subtext: d.getAttribute("data-subtext"), icon: d.getAttribute("data-icon") }; this.multiple && a > 0 && r.appendChild(o.cloneNode(!1)), d.title ? h.text = d.title : p.content && this.options.showContent ? (h.optionContent = p.content.toString(), c = !0) : (this.options.showIcon && (h.optionIcon = p.icon, h.iconBase = this.options.iconBase), this.options.showSubtext && !this.multiple && p.subtext && (h.optionSubtext = " " + p.subtext), h.text = d.textContent.trim()), r.appendChild(q(h, !0)) } s > 49 && r.appendChild(document.createTextNode("...")) } else { var u = ':not([hidden]):not([data-hidden="true"]):not([data-divider="true"])'; this.options.hideDisabled && (u += ":not(:disabled)"); var f = this.$element[0].querySelectorAll("select > option" + u + ", optgroup" + u + " option" + u).length, m = "function" == typeof this.options.countSelectedText ? this.options.countSelectedText(s, f) : this.options.countSelectedText; r = q({ text: m.replace("{0}", s.toString()).replace("{1}", f.toString()) }, !0) } null == this.options.title && (this.options.title = this.$element.attr("title")), r.childNodes.length || (r = q({ text: void 0 !== this.options.title ? this.options.title : this.options.noneSelectedText }, !0)), this.$button[0].title = r.textContent.replace(/<[^>]*>?/g, "").trim(), this.options.sanitize && c && l([r], this.options.whiteList, this.options.sanitizeFn), n.innerHTML = "", n.appendChild(r), this.$element.trigger("rendered.bs.select") }, setStyle: function (e, t) { var i = this.$button[0]; this.$element.attr("class") && this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi, "")); var s = e || this.options.style; "add" == t ? i.classList.add(s) : "remove" == t ? i.classList.remove(s) : (i.classList.remove(this.options.style), i.classList.add(s)) }, liHeight: function (t) { if (t || !1 !== this.options.size && !this.sizeInfo) { this.sizeInfo || (this.sizeInfo = {}); var i = document.createElement("div"), s = document.createElement("div"), n = document.createElement("div"), o = document.createElement("ul"), r = document.createElement("li"), l = document.createElement("li"), c = document.createElement("li"), a = document.createElement("a"), d = document.createElement("span"), h = this.options.header && this.$menu.find("." + M.POPOVERHEADER).length > 0 ? this.$menu.find("." + M.POPOVERHEADER)[0].cloneNode(!0) : null, p = this.options.liveSearch ? document.createElement("div") : null, u = this.options.actionsBox && this.multiple && this.$menu.find(".bs-actionsbox").length > 0 ? this.$menu.find(".bs-actionsbox")[0].cloneNode(!0) : null, f = this.options.doneButton && this.multiple && this.$menu.find(".bs-donebutton").length > 0 ? this.$menu.find(".bs-donebutton")[0].cloneNode(!0) : null, m = this.$element.find("option")[0]; if (this.sizeInfo.selectWidth = this.$newElement[0].offsetWidth, d.className = "text", a.className = "dropdown-item " + (m ? m.className : ""), i.className = this.$menu[0].parentNode.className + " " + M.SHOW, i.style.width = this.sizeInfo.selectWidth + "px", "auto" === this.options.width && (s.style.minWidth = 0), s.className = M.MENU + " " + M.SHOW, n.className = "inner " + M.SHOW, o.className = M.MENU + " inner " + ("4" === B.major ? M.SHOW : ""), r.className = M.DIVIDER, l.className = "dropdown-header", d.appendChild(document.createTextNode("​")), a.appendChild(d), c.appendChild(a), l.appendChild(d.cloneNode(!0)), this.selectpicker.view.widestOption && o.appendChild(this.selectpicker.view.widestOption.cloneNode(!0)), o.appendChild(c), o.appendChild(r), o.appendChild(l), h && s.appendChild(h), p) { var v = document.createElement("input"); p.className = "bs-searchbox", v.className = "form-control", p.appendChild(v), s.appendChild(p) } u && s.appendChild(u), n.appendChild(o), s.appendChild(n), f && s.appendChild(f), i.appendChild(s), document.body.appendChild(i); var g, w = a.offsetHeight, x = l ? l.offsetHeight : 0, I = h ? h.offsetHeight : 0, k = p ? p.offsetHeight : 0, $ = u ? u.offsetHeight : 0, S = f ? f.offsetHeight : 0, y = e(r).outerHeight(!0), E = !!window.getComputedStyle && window.getComputedStyle(s), C = s.offsetWidth, O = E ? null : e(s), z = { vert: b(E ? E.paddingTop : O.css("paddingTop")) + b(E ? E.paddingBottom : O.css("paddingBottom")) + b(E ? E.borderTopWidth : O.css("borderTopWidth")) + b(E ? E.borderBottomWidth : O.css("borderBottomWidth")), horiz: b(E ? E.paddingLeft : O.css("paddingLeft")) + b(E ? E.paddingRight : O.css("paddingRight")) + b(E ? E.borderLeftWidth : O.css("borderLeftWidth")) + b(E ? E.borderRightWidth : O.css("borderRightWidth")) }, T = { vert: z.vert + b(E ? E.marginTop : O.css("marginTop")) + b(E ? E.marginBottom : O.css("marginBottom")) + 2, horiz: z.horiz + b(E ? E.marginLeft : O.css("marginLeft")) + b(E ? E.marginRight : O.css("marginRight")) + 2 }; n.style.overflowY = "scroll", g = s.offsetWidth - C, document.body.removeChild(i), this.sizeInfo.liHeight = w, this.sizeInfo.dropdownHeaderHeight = x, this.sizeInfo.headerHeight = I, this.sizeInfo.searchHeight = k, this.sizeInfo.actionsHeight = $, this.sizeInfo.doneButtonHeight = S, this.sizeInfo.dividerHeight = y, this.sizeInfo.menuPadding = z, this.sizeInfo.menuExtras = T, this.sizeInfo.menuWidth = C, this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth, this.sizeInfo.scrollBarWidth = g, this.sizeInfo.selectHeight = this.$newElement[0].offsetHeight, this.setPositionData() } }, getSelectPosition: function () { var t, i = e(window), s = this.$newElement.offset(), n = e(this.options.container); this.options.container && n.length && !n.is("body") ? ((t = n.offset()).top += parseInt(n.css("borderTopWidth")), t.left += parseInt(n.css("borderLeftWidth"))) : t = { top: 0, left: 0 }; var o = this.options.windowPadding; this.sizeInfo.selectOffsetTop = s.top - t.top - i.scrollTop(), this.sizeInfo.selectOffsetBot = i.height() - this.sizeInfo.selectOffsetTop - this.sizeInfo.selectHeight - t.top - o[2], this.sizeInfo.selectOffsetLeft = s.left - t.left - i.scrollLeft(), this.sizeInfo.selectOffsetRight = i.width() - this.sizeInfo.selectOffsetLeft - this.sizeInfo.selectWidth - t.left - o[1], this.sizeInfo.selectOffsetTop -= o[0], this.sizeInfo.selectOffsetLeft -= o[3] }, setMenuSize: function (e) { this.getSelectPosition(); var t, i, s, n, o, r, l, c = this.sizeInfo.selectWidth, a = this.sizeInfo.liHeight, d = this.sizeInfo.headerHeight, h = this.sizeInfo.searchHeight, p = this.sizeInfo.actionsHeight, u = this.sizeInfo.doneButtonHeight, f = this.sizeInfo.dividerHeight, m = this.sizeInfo.menuPadding, v = 0; if (this.options.dropupAuto && (l = a * this.selectpicker.current.elements.length + m.vert, this.$newElement.toggleClass(M.DROPUP, this.sizeInfo.selectOffsetTop - this.sizeInfo.selectOffsetBot > this.sizeInfo.menuExtras.vert && l + this.sizeInfo.menuExtras.vert + 50 > this.sizeInfo.selectOffsetBot)), "auto" === this.options.size) n = this.selectpicker.current.elements.length > 3 ? 3 * this.sizeInfo.liHeight + this.sizeInfo.menuExtras.vert - 2 : 0, i = this.sizeInfo.selectOffsetBot - this.sizeInfo.menuExtras.vert, s = n + d + h + p + u, r = Math.max(n - m.vert, 0), this.$newElement.hasClass(M.DROPUP) && (i = this.sizeInfo.selectOffsetTop - this.sizeInfo.menuExtras.vert), o = i, t = i - d - h - p - u - m.vert; else if (this.options.size && "auto" != this.options.size && this.selectpicker.current.elements.length > this.options.size) { for (var g = 0; g < this.options.size; g++)"divider" === this.selectpicker.current.data[g].type && v++; t = (i = a * this.options.size + v * f + m.vert) - m.vert, o = i + d + h + p + u, s = r = "" } "auto" === this.options.dropdownAlignRight && this.$menu.toggleClass(M.MENURIGHT, this.sizeInfo.selectOffsetLeft > this.sizeInfo.selectOffsetRight && this.sizeInfo.selectOffsetRight < this.sizeInfo.totalMenuWidth - c), this.$menu.css({ "max-height": o + "px", overflow: "hidden", "min-height": s + "px" }), this.$menuInner.css({ "max-height": t + "px", "overflow-y": "auto", "min-height": r + "px" }), this.sizeInfo.menuInnerHeight = Math.max(t, 1), this.selectpicker.current.data.length && this.selectpicker.current.data[this.selectpicker.current.data.length - 1].position > this.sizeInfo.menuInnerHeight && (this.sizeInfo.hasScrollBar = !0, this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth + this.sizeInfo.scrollBarWidth, this.$menu.css("min-width", this.sizeInfo.totalMenuWidth)), this.dropdown && this.dropdown._popper && this.dropdown._popper.update() }, setSize: function (t) { if (this.liHeight(t), this.options.header && this.$menu.css("padding-top", 0), !1 !== this.options.size) { var i, s = this, n = e(window), o = 0; this.setMenuSize(), this.options.liveSearch && this.$searchbox.off("input.setMenuSize propertychange.setMenuSize").on("input.setMenuSize propertychange.setMenuSize", function () { return s.setMenuSize() }), "auto" === this.options.size ? n.off("resize.bs.select." + this.selectId + ".setMenuSize scroll" + W + "." + this.selectId + ".setMenuSize").on("resize.bs.select." + this.selectId + ".setMenuSize scroll" + W + "." + this.selectId + ".setMenuSize", function () { return s.setMenuSize() }) : this.options.size && "auto" != this.options.size && this.selectpicker.current.elements.length > this.options.size && n.off("resize.bs.select." + this.selectId + ".setMenuSize scroll" + W + "." + this.selectId + ".setMenuSize"), t ? o = this.$menuInner[0].scrollTop : s.multiple || "number" == typeof (i = s.selectpicker.main.map.newIndex[s.$element[0].selectedIndex]) && !1 !== s.options.size && (o = (o = s.sizeInfo.liHeight * i) - s.sizeInfo.menuInnerHeight / 2 + s.sizeInfo.liHeight / 2), s.createView(!1, o) } }, setWidth: function () { var e = this; "auto" === this.options.width ? requestAnimationFrame(function () { e.$menu.css("min-width", "0"), e.liHeight(), e.setMenuSize(); var t = e.$newElement.clone().appendTo("body"), i = t.css("width", "auto").children("button").outerWidth(); t.remove(), e.sizeInfo.selectWidth = Math.max(e.sizeInfo.totalMenuWidth, i), e.$newElement.css("width", e.sizeInfo.selectWidth + "px") }) : "fit" === this.options.width ? (this.$menu.css("min-width", ""), this.$newElement.css("width", "").addClass("fit-width")) : this.options.width ? (this.$menu.css("min-width", ""), this.$newElement.css("width", this.options.width)) : (this.$menu.css("min-width", ""), this.$newElement.css("width", "")), this.$newElement.hasClass("fit-width") && "fit" !== this.options.width && this.$newElement[0].classList.remove("fit-width") }, selectPosition: function () { this.$bsContainer = e('<div class="bs-container" />'); var t, i, s, n = this, o = e(this.options.container), r = function (r) { var l = {}, c = n.options.display || !!e.fn.dropdown.Constructor.Default && e.fn.dropdown.Constructor.Default.display; n.$bsContainer.addClass(r.attr("class").replace(/form-control|fit-width/gi, "")).toggleClass(M.DROPUP, r.hasClass(M.DROPUP)), t = r.offset(), o.is("body") ? i = { top: 0, left: 0 } : ((i = o.offset()).top += parseInt(o.css("borderTopWidth")) - o.scrollTop(), i.left += parseInt(o.css("borderLeftWidth")) - o.scrollLeft()), s = r.hasClass(M.DROPUP) ? 0 : r[0].offsetHeight, (B.major < 4 || "static" === c) && (l.top = t.top - i.top + s, l.left = t.left - i.left), l.width = r[0].offsetWidth, n.$bsContainer.css(l) }; this.$button.on("click.bs.dropdown.data-api", function () { n.isDisabled() || (r(n.$newElement), n.$bsContainer.appendTo(n.options.container).toggleClass(M.SHOW, !n.$button.hasClass(M.SHOW)).append(n.$menu)) }), e(window).off("resize.bs.select." + this.selectId + " scroll" + W + "." + this.selectId).on("resize.bs.select." + this.selectId + " scroll" + W + "." + this.selectId, function () { n.$newElement.hasClass(M.SHOW) && r(n.$newElement) }), this.$element.on("hide.bs.select", function () { n.$menu.data("height", n.$menu.height()), n.$bsContainer.detach() }) }, setOptionStatus: function () { var e = this.$element[0].options; if (this.noScroll = !1, this.selectpicker.view.visibleElements && this.selectpicker.view.visibleElements.length) for (var t = 0; t < this.selectpicker.view.visibleElements.length; t++) { var i = this.selectpicker.current.map.originalIndex[t + this.selectpicker.view.position0], s = e[i]; if (s) { var n = this.selectpicker.main.map.newIndex[i], o = this.selectpicker.main.elements[n]; this.setDisabled(i, s.disabled || "OPTGROUP" === s.parentNode.tagName && s.parentNode.disabled, n, o), this.setSelected(i, s.selected, n, o) } } }, setSelected: function (e, t, i, s) { var n, o, r, l = void 0 !== this.activeIndex, c = this.activeIndex === e || t && !this.multiple && !l; i || (i = this.selectpicker.main.map.newIndex[e]), s || (s = this.selectpicker.main.elements[i]), r = s.firstChild, t && (this.selectedIndex = e), s.classList.toggle("selected", t), s.classList.toggle("active", c), c && (this.selectpicker.view.currentActive = s, this.activeIndex = e), r && (r.classList.toggle("selected", t), r.classList.toggle("active", c), r.setAttribute("aria-selected", t)), c || !l && t && void 0 !== this.prevActiveIndex && (n = this.selectpicker.main.map.newIndex[this.prevActiveIndex], (o = this.selectpicker.main.elements[n]).classList.remove("active"), o.firstChild && o.firstChild.classList.remove("active")) }, setDisabled: function (e, t, i, s) { var n; i || (i = this.selectpicker.main.map.newIndex[e]), s || (s = this.selectpicker.main.elements[i]), n = s.firstChild, s.classList.toggle(M.DISABLED, t), n && ("4" === B.major && n.classList.toggle(M.DISABLED, t), n.setAttribute("aria-disabled", t), t ? n.setAttribute("tabindex", -1) : n.setAttribute("tabindex", 0)) }, isDisabled: function () { return this.$element[0].disabled }, checkDisabled: function () { var e = this; this.isDisabled() ? (this.$newElement[0].classList.add(M.DISABLED), this.$button.addClass(M.DISABLED).attr("tabindex", -1).attr("aria-disabled", !0)) : (this.$button[0].classList.contains(M.DISABLED) && (this.$newElement[0].classList.remove(M.DISABLED), this.$button.removeClass(M.DISABLED).attr("aria-disabled", !1)), -1 != this.$button.attr("tabindex") || this.$element.data("tabindex") || this.$button.removeAttr("tabindex")), this.$button.on("click", function () { return !e.isDisabled() }) }, togglePlaceholder: function () { var e = this.$element[0], t = e.selectedIndex, i = -1 === t; i || e.options[t].value || (i = !0), this.$button.toggleClass("bs-placeholder", i) }, tabIndex: function () { this.$element.data("tabindex") !== this.$element.attr("tabindex") && -98 !== this.$element.attr("tabindex") && "-98" !== this.$element.attr("tabindex") && (this.$element.data("tabindex", this.$element.attr("tabindex")), this.$button.attr("tabindex", this.$element.data("tabindex"))), this.$element.attr("tabindex", -98) }, clickListener: function () { var t = this, i = e(document); function s() { t.options.liveSearch ? t.$searchbox.trigger("focus") : t.$menuInner.trigger("focus") } function n() { t.dropdown && t.dropdown._popper && t.dropdown._popper.state.isCreated ? s() : requestAnimationFrame(n) } i.data("spaceSelect", !1), this.$button.on("keyup", function (e) { /(32)/.test(e.keyCode.toString(10)) && i.data("spaceSelect") && (e.preventDefault(), i.data("spaceSelect", !1)) }), this.$newElement.on("show.bs.dropdown", function () { B.major > 3 && !t.dropdown && (t.dropdown = t.$button.data("bs.dropdown"), t.dropdown._menu = t.$menu[0]) }), this.$button.on("click.bs.dropdown.data-api", function () { t.$newElement.hasClass(M.SHOW) || t.setSize() }), this.$element.on("shown.bs.select", function () { t.$menuInner[0].scrollTop !== t.selectpicker.view.scrollTop && (t.$menuInner[0].scrollTop = t.selectpicker.view.scrollTop), B.major > 3 ? requestAnimationFrame(n) : s() }), this.$menuInner.on("click", "li a", function (i, s) { var n = e(this), o = t.isVirtual() ? t.selectpicker.view.position0 : 0, r = t.selectpicker.current.map.originalIndex[n.parent().index() + o], l = u(t.$element[0]), c = t.$element.prop("selectedIndex"), a = !0; if (t.multiple && 1 !== t.options.maxOptions && i.stopPropagation(), i.preventDefault(), !t.isDisabled() && !n.parent().hasClass(M.DISABLED)) { var d = t.$element.find("option"), h = d.eq(r), p = h.prop("selected"), f = h.parent("optgroup"), v = f.find("option"), g = t.options.maxOptions, b = f.data("maxOptions") || !1; if (r === t.activeIndex && (s = !0), s || (t.prevActiveIndex = t.activeIndex, t.activeIndex = void 0), t.multiple) { if (h.prop("selected", !p), t.setSelected(r, !p), n.trigger("blur"), !1 !== g || !1 !== b) { var w = g < d.filter(":selected").length, x = b < f.find("option:selected").length; if (g && w || b && x) if (g && 1 == g) { d.prop("selected", !1), h.prop("selected", !0); for (var I = 0; I < d.length; I++)t.setSelected(I, !1); t.setSelected(r, !0) } else if (b && 1 == b) { f.find("option:selected").prop("selected", !1), h.prop("selected", !0); for (I = 0; I < v.length; I++) { var k = v[I]; t.setSelected(d.index(k), !1) } t.setSelected(r, !0) } else { var $ = "string" == typeof t.options.maxOptionsText ? [t.options.maxOptionsText, t.options.maxOptionsText] : t.options.maxOptionsText, S = "function" == typeof $ ? $(g, b) : $, y = S[0].replace("{n}", g), E = S[1].replace("{n}", b), C = e('<div class="notify"></div>'); S[2] && (y = y.replace("{var}", S[2][g > 1 ? 0 : 1]), E = E.replace("{var}", S[2][b > 1 ? 0 : 1])), h.prop("selected", !1), t.$menu.append(C), g && w && (C.append(e("<div>" + y + "</div>")), a = !1, t.$element.trigger("maxReached.bs.select")), b && x && (C.append(e("<div>" + E + "</div>")), a = !1, t.$element.trigger("maxReachedGrp.bs.select")), setTimeout(function () { t.setSelected(r, !1) }, 10), C.delay(750).fadeOut(300, function () { e(this).remove() }) } } } else d.prop("selected", !1), h.prop("selected", !0), t.setSelected(r, !0); !t.multiple || t.multiple && 1 === t.options.maxOptions ? t.$button.trigger("focus") : t.options.liveSearch && t.$searchbox.trigger("focus"), a && (l != u(t.$element[0]) && t.multiple || c != t.$element.prop("selectedIndex") && !t.multiple) && (m = [r, h.prop("selected"), l], t.$element.triggerNative("change")) } }), this.$menu.on("click", "li." + M.DISABLED + " a, ." + M.POPOVERHEADER + ", ." + M.POPOVERHEADER + " :not(.close)", function (i) { i.currentTarget == this && (i.preventDefault(), i.stopPropagation(), t.options.liveSearch && !e(i.target).hasClass("close") ? t.$searchbox.trigger("focus") : t.$button.trigger("focus")) }), this.$menuInner.on("click", ".divider, .dropdown-header", function (e) { e.preventDefault(), e.stopPropagation(), t.options.liveSearch ? t.$searchbox.trigger("focus") : t.$button.trigger("focus") }), this.$menu.on("click", "." + M.POPOVERHEADER + " .close", function () { t.$button.trigger("click") }), this.$searchbox.on("click", function (e) { e.stopPropagation() }), this.$menu.on("click", ".actions-btn", function (i) { t.options.liveSearch ? t.$searchbox.trigger("focus") : t.$button.trigger("focus"), i.preventDefault(), i.stopPropagation(), e(this).hasClass("bs-select-all") ? t.selectAll() : t.deselectAll() }), this.$element.on({ change: function () { t.render(), t.$element.trigger("changed.bs.select", m), m = null }, focus: function () { t.options.mobile || t.$button.trigger("focus") } }) }, liveSearchListener: function () { var e = this, t = document.createElement("li"); this.$button.on("click.bs.dropdown.data-api", function () { e.$searchbox.val() && e.$searchbox.val("") }), this.$searchbox.on("click.bs.dropdown.data-api focus.bs.dropdown.data-api touchend.bs.dropdown.data-api", function (e) { e.stopPropagation() }), this.$searchbox.on("input propertychange", function () { var i = e.$searchbox.val(); if (e.selectpicker.search.map.newIndex = {}, e.selectpicker.search.map.originalIndex = {}, e.selectpicker.search.elements = [], e.selectpicker.search.data = [], i) { var s = [], n = i.toUpperCase(), o = {}, r = [], l = e._searchStyle(), c = e.options.liveSearchNormalize; c && (n = $(n)), e._$lisSelected = e.$menuInner.find(".selected"); for (var a = 0; a < e.selectpicker.main.data.length; a++) { var d = e.selectpicker.main.data[a]; o[a] || (o[a] = g(d, n, l, c)), o[a] && void 0 !== d.headerIndex && -1 === r.indexOf(d.headerIndex) && (d.headerIndex > 0 && (o[d.headerIndex - 1] = !0, r.push(d.headerIndex - 1)), o[d.headerIndex] = !0, r.push(d.headerIndex), o[d.lastIndex + 1] = !0), o[a] && "optgroup-label" !== d.type && r.push(a) } a = 0; for (var h = r.length; a < h; a++) { var p = r[a], u = r[a - 1], f = (d = e.selectpicker.main.data[p], e.selectpicker.main.data[u]); ("divider" !== d.type || "divider" === d.type && f && "divider" !== f.type && h - 1 !== a) && (e.selectpicker.search.data.push(d), s.push(e.selectpicker.main.elements[p]), d.hasOwnProperty("originalIndex") && (e.selectpicker.search.map.newIndex[d.originalIndex] = s.length - 1, e.selectpicker.search.map.originalIndex[s.length - 1] = d.originalIndex)) } e.activeIndex = void 0, e.noScroll = !0, e.$menuInner.scrollTop(0), e.selectpicker.search.elements = s, e.createView(!0), s.length || (t.className = "no-results", t.innerHTML = e.options.noneResultsText.replace("{0}", '"' + z(i) + '"'), e.$menuInner[0].firstChild.appendChild(t)) } else e.$menuInner.scrollTop(0), e.createView(!1) }) }, _searchStyle: function () { return this.options.liveSearchStyle || "contains" }, val: function (e) { return void 0 !== e ? (this.$element.val(e).triggerNative("change"), this.$element) : this.$element.val() }, changeAll: function (e) { if (this.multiple) { void 0 === e && (e = !0); var t = this.$element[0], i = t.options, s = 0, n = 0, o = u(t); t.classList.add("bs-select-hidden"); for (var r = 0, l = this.selectpicker.current.elements.length; r < l; r++) { var c = this.selectpicker.current.data[r], a = i[this.selectpicker.current.map.originalIndex[r]]; a && !a.disabled && "divider" !== c.type && (a.selected && s++ , a.selected = e, e && n++) } t.classList.remove("bs-select-hidden"), s !== n && (this.setOptionStatus(), this.togglePlaceholder(), m = [null, null, o], this.$element.triggerNative("change")) } }, selectAll: function () { return this.changeAll(!0) }, deselectAll: function () { return this.changeAll(!1) }, toggle: function (e) { (e = e || window.event) && e.stopPropagation(), this.$button.trigger("click.bs.dropdown.data-api") }, keydown: function (t) { var i, s, n, o, r, l = e(this), c = l.hasClass("dropdown-toggle"), a = (c ? l.closest(".dropdown") : l.closest(U.MENU)).data("this"), d = a.findLis(), h = !1, p = t.which === D && !c && !a.options.selectOnTab, u = j.test(t.which) || p, f = a.$menuInner[0].scrollTop, m = a.isVirtual(), v = !0 === m ? a.selectpicker.view.position0 : 0; if (!(s = a.$newElement.hasClass(M.SHOW)) && (u || t.which >= 48 && t.which <= 57 || t.which >= 96 && t.which <= 105 || t.which >= 65 && t.which <= 90) && (a.$button.trigger("click.bs.dropdown.data-api"), a.options.liveSearch)) a.$searchbox.trigger("focus"); else { if (t.which === L && s && (t.preventDefault(), a.$button.trigger("click.bs.dropdown.data-api").trigger("focus")), u) { if (!d.length) return; void 0 === (i = !0 === m ? d.index(d.filter(".active")) : a.selectpicker.current.map.newIndex[a.activeIndex]) && (i = -1), -1 !== i && ((n = a.selectpicker.current.elements[i + v]).classList.remove("active"), n.firstChild && n.firstChild.classList.remove("active")), t.which === N ? (-1 !== i && i-- , i + v < 0 && (i += d.length), a.selectpicker.view.canHighlight[i + v] || -1 === (i = a.selectpicker.view.canHighlight.slice(0, i + v).lastIndexOf(!0) - v) && (i = d.length - 1)) : (t.which === P || p) && (++i + v >= a.selectpicker.view.canHighlight.length && (i = 0), a.selectpicker.view.canHighlight[i + v] || (i = i + 1 + a.selectpicker.view.canHighlight.slice(i + v + 1).indexOf(!0))), t.preventDefault(); var b = v + i; t.which === N ? 0 === v && i === d.length - 1 ? (a.$menuInner[0].scrollTop = a.$menuInner[0].scrollHeight, b = a.selectpicker.current.elements.length - 1) : h = (r = (o = a.selectpicker.current.data[b]).position - o.height) < f : (t.which === P || p) && (0 === i ? (a.$menuInner[0].scrollTop = 0, b = 0) : h = (r = (o = a.selectpicker.current.data[b]).position - a.sizeInfo.menuInnerHeight) > f), (n = a.selectpicker.current.elements[b]) && (n.classList.add("active"), n.firstChild && n.firstChild.classList.add("active")), a.activeIndex = a.selectpicker.current.map.originalIndex[b], a.selectpicker.view.currentActive = n, h && (a.$menuInner[0].scrollTop = r), a.options.liveSearch ? a.$searchbox.trigger("focus") : l.trigger("focus") } else if (!l.is("input") && !F.test(t.which) || t.which === H && a.selectpicker.keydown.keyHistory) { var w, x, I = []; t.preventDefault(), a.selectpicker.keydown.keyHistory += T[t.which], a.selectpicker.keydown.resetKeyHistory.cancel && clearTimeout(a.selectpicker.keydown.resetKeyHistory.cancel), a.selectpicker.keydown.resetKeyHistory.cancel = a.selectpicker.keydown.resetKeyHistory.start(), x = a.selectpicker.keydown.keyHistory, /^(.)\1+$/.test(x) && (x = x.charAt(0)); for (var k = 0; k < a.selectpicker.current.data.length; k++) { var $ = a.selectpicker.current.data[k]; g($, x, "startsWith", !0) && a.selectpicker.view.canHighlight[k] && ($.index = k, I.push($.originalIndex)) } if (I.length) { var S = 0; d.removeClass("active").find("a").removeClass("active"), 1 === x.length && (-1 === (S = I.indexOf(a.activeIndex)) || S === I.length - 1 ? S = 0 : S++), w = a.selectpicker.current.map.newIndex[I[S]], f - (o = a.selectpicker.current.data[w]).position > 0 ? (r = o.position - o.height, h = !0) : (r = o.position - a.sizeInfo.menuInnerHeight, h = o.position > f + a.sizeInfo.menuInnerHeight), (n = a.selectpicker.current.elements[w]).classList.add("active"), n.firstChild && n.firstChild.classList.add("active"), a.activeIndex = I[S], n.firstChild.trigger("focus"), h && (a.$menuInner[0].scrollTop = r), l.trigger("focus") } } s && (t.which === H && !a.selectpicker.keydown.keyHistory || t.which === A || t.which === D && a.options.selectOnTab) && (t.which !== H && t.preventDefault(), a.options.liveSearch && t.which === H || (a.$menuInner.find(".active a").trigger("click", !0), l.trigger("focus"), a.options.liveSearch || (t.preventDefault(), e(document).data("spaceSelect", !0)))) } }, mobile: function () { this.$element[0].classList.add("mobile-device") }, refresh: function () { var t = e.extend({}, this.options, this.$element.data()); this.options = t, this.selectpicker.main.map.newIndex = {}, this.selectpicker.main.map.originalIndex = {}, this.checkDisabled(), this.render(), this.createLi(), this.setStyle(), this.setWidth(), this.setSize(!0), this.$element.trigger("refreshed.bs.select") }, hide: function () { this.$newElement.hide() }, show: function () { this.$newElement.show() }, remove: function () { this.$newElement.remove(), this.$element.remove() }, destroy: function () { this.$newElement.before(this.$element).remove(), this.$bsContainer ? this.$bsContainer.remove() : this.$menu.remove(), this.$element.off(W).removeData("selectpicker").removeClass("bs-select-hidden selectpicker"), e(window).off(".bs.select." + this.selectId) } }; var J = e.fn.selectpicker; e.fn.selectpicker = Z, e.fn.selectpicker.Constructor = Y, e.fn.selectpicker.noConflict = function () { return e.fn.selectpicker = J, this }, e(document).off("keydown.bs.dropdown.data-api").on("keydown.bs.select", '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', Y.prototype.keydown).on("focusin.modal", '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', function (e) { e.stopPropagation() }), e(window).on("load.bs.select.data-api", function () { e(".selectpicker").each(function () { var t = e(this); Z.call(t, t.data()) }) }) }(e) });